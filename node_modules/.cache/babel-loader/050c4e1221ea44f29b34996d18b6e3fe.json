{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gabriel\\\\Documents\\\\aceleradev\\\\src\\\\components\\\\Blogcontent.js\",\n    _s = $RefreshSig$();\n\nimport styles from '../styles/components/blogcontent.module.css';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Blogcontent() {\n  _s();\n\n  const itemblog = {\n    TITLE: \"Aplicações Next.js(Typescript)\",\n    GITHUB: \"https://github.com/Gabrielscruz/Whatsappbot\",\n    YOUTUBE: \"Cf8tN79xU3s\",\n    TIPO: \"BACKEND\",\n    AUTOR: \"GABRIEL DA SILVA CRUZ\",\n    DATAPOST: \"2021-03-14\",\n    THUMBNAIL: \"\",\n    CONTENT: ` <p>\n    HTML texto preformatado   é a tag <span>HTML</span> utilizada para representar texto pré - formatado.Um texto dentro desse elemento é tipicamente exibido em uma fonte não proporcional da mesma maneira em que o texto original foi disposto no arquivo.Espaços em branco são mantidos no texto da mesma forma em que este foi digitado.\nContent categories Flow content, palpable content.\n\nConteúdo permitido Phrasing content.\nTag omission None, both the starting and ending tag are mandatory.\nElementos pai permitidos Any element that accepts flow content.\ninterface DOM HTMLPreElement(en - US)\n</p >\n\n  <h3>Exemplos</h3>\n\n  <p id='code'> yarn create next-app aceleradev </p>\n  <p id='code'> yarn add typescript @types/react @types/react-dom @types/node -D </p`\n  };\n  useEffect(() => {\n    document.querySelector('#texto').innerHTML = itemblog.CONTENT;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.blogcontent,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.divtag,\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        target: \"_blank\",\n        href: itemblog.GITHUB,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fab fa-github\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 52\n        }, this), \" GitHub\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: itemblog.TITLE\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.divtext,\n      children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n        height: \"500px\",\n        width: \"100%\",\n        src: `https://www.youtube.com/embed/${itemblog.YOUTUBE}`,\n        allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"texto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.divcontent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Blogcontent, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Blogcontent;\n\nvar _c;\n\n$RefreshReg$(_c, \"Blogcontent\");","map":{"version":3,"sources":["C:/Users/Gabriel/Documents/aceleradev/src/components/Blogcontent.js"],"names":["styles","useEffect","Blogcontent","itemblog","TITLE","GITHUB","YOUTUBE","TIPO","AUTOR","DATAPOST","THUMBNAIL","CONTENT","document","querySelector","innerHTML","blogcontent","divtag","divtext","divcontent"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,6CAAnB;AACA,SAASC,SAAT,QAA0B,OAA1B;;AAGA,OAAO,SAASC,WAAT,GAAuB;AAAA;;AAG5B,QAAMC,QAAQ,GAAG;AACfC,IAAAA,KAAK,EAAE,gCADQ;AAEfC,IAAAA,MAAM,EAAE,6CAFO;AAGfC,IAAAA,OAAO,EAAE,aAHM;AAIfC,IAAAA,IAAI,EAAE,SAJS;AAKfC,IAAAA,KAAK,EAAE,uBALQ;AAMfC,IAAAA,QAAQ,EAAE,YANK;AAOfC,IAAAA,SAAS,EAAE,EAPI;AAQfC,IAAAA,OAAO,EAAG;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBmB,GAAjB;AA0BAV,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,QAAQ,CAACC,aAAT,CAAuB,QAAvB,EAAiCC,SAAjC,GAA6CX,QAAQ,CAACQ,OAAtD;AACD,GAFQ,EAEN,EAFM,CAAT;AAMA,sBACE;AAAK,IAAA,SAAS,EAAEX,MAAM,CAACe,WAAvB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEf,MAAM,CAACgB,MAAvB;AAAA,8BACE;AAAG,QAAA,MAAM,EAAC,QAAV;AAAmB,QAAA,IAAI,EAAEb,QAAQ,CAACE,MAAlC;AAAA,gCAA2C;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAKF,QAAQ,CAACC;AAAd;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAEJ,MAAM,CAACiB,OAAvB;AAAA,8BAEE;AAAQ,QAAA,MAAM,EAAC,OAAf;AAAuB,QAAA,KAAK,EAAC,MAA7B;AAAoC,QAAA,GAAG,EAAG,iCAAgCd,QAAQ,CAACG,OAAQ,EAA3F;AAA8F,QAAA,KAAK,EAAC;AAApG;AAAA;AAAA;AAAA;AAAA,cAFF,eAME;AAAK,QAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAeE;AAAK,MAAA,SAAS,EAAEN,MAAM,CAACkB;AAAvB;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GAtDehB,W;;KAAAA,W","sourcesContent":["import styles from '../styles/components/blogcontent.module.css'\r\nimport { useEffect } from 'react'\r\n\r\n\r\nexport function Blogcontent() {\r\n\r\n\r\n  const itemblog = {\r\n    TITLE: \"Aplicações Next.js(Typescript)\",\r\n    GITHUB: \"https://github.com/Gabrielscruz/Whatsappbot\",\r\n    YOUTUBE: \"Cf8tN79xU3s\",\r\n    TIPO: \"BACKEND\",\r\n    AUTOR: \"GABRIEL DA SILVA CRUZ\",\r\n    DATAPOST: \"2021-03-14\",\r\n    THUMBNAIL: \"\",\r\n    CONTENT: ` <p>\r\n    HTML texto preformatado   é a tag <span>HTML</span> utilizada para representar texto pré - formatado.Um texto dentro desse elemento é tipicamente exibido em uma fonte não proporcional da mesma maneira em que o texto original foi disposto no arquivo.Espaços em branco são mantidos no texto da mesma forma em que este foi digitado.\r\nContent categories Flow content, palpable content.\r\n\r\nConteúdo permitido Phrasing content.\r\nTag omission None, both the starting and ending tag are mandatory.\r\nElementos pai permitidos Any element that accepts flow content.\r\ninterface DOM HTMLPreElement(en - US)\r\n</p >\r\n\r\n  <h3>Exemplos</h3>\r\n\r\n  <p id='code'> yarn create next-app aceleradev </p>\r\n  <p id='code'> yarn add typescript @types/react @types/react-dom @types/node -D </p`\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    document.querySelector('#texto').innerHTML = itemblog.CONTENT;\r\n  }, [])\r\n\r\n\r\n\r\n  return (\r\n    <div className={styles.blogcontent}>\r\n      <div className={styles.divtag}>\r\n        <a target=\"_blank\" href={itemblog.GITHUB} ><i className=\"fab fa-github\"></i> GitHub</a>\r\n        <h1>{itemblog.TITLE}</h1>\r\n      </div>\r\n      <div className={styles.divtext}>\r\n\r\n        <iframe height=\"500px\" width=\"100%\" src={`https://www.youtube.com/embed/${itemblog.YOUTUBE}`} allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" >\r\n        </iframe>\r\n\r\n\r\n        <div id=\"texto\">\r\n        </div>\r\n\r\n      </div>\r\n      <div className={styles.divcontent}></div>\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}